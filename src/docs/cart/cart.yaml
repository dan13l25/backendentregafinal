openapi: 3.0.1
info:
  title: Documentación del carrito
  description: API  para manejar el carrito de compra
  version: "1.0.0"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: string
          example: "60d21b4667d0d8992e610c85"
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                example: "60d21b4667d0d8992e610c86"
              productQuantity:
                type: number
                example: 2
              productPrice:
                type: number
                example: 20
              productTotal:
                type: number
                example: 40
        user:
          type: string
          example: "60d21b4667d0d8992e610c87"
    Product:
      type: object
      properties:
        id:
          type: string
          example: "60d21b4667d0d8992e610c86"
        title:
          type: string
          example: "Producto de ejemplo"
        description:
          type: string
          example: "Descripción del producto de ejemplo"
        price:
          type: number
          example: 100
        thumbnails:
          type: array
          items:
            type: string
            example: "http://example.com/image.jpg"
        code:
          type: string
          example: "P123456"
        stock:
          type: number
          example: 10
        status:
          type: boolean
          example: true
        category:
          type: string
          example: "Categoría de ejemplo"
        brand:
          type: string
          example: "Marca de ejemplo"
    Ticket:
      type: object
      properties:
        code:
          type: string
          example: "ABC123456"
        purchase_datetime:
          type: string
          format: date-time
          example: "2023-07-21T17:32:28Z"
        amount:
          type: number
          example: 200
        purchaser:
          type: string
          example: "60d21b4667d0d8992e610c87"
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                example: "60d21b4667d0d8992e610c86"
              productQuantity:
                type: number
                example: 2
              productTotal:
                type: number
                example: 40
paths:
  /api/carts:
    post:
      summary: Crear un nuevo carrito
      responses:
        "201":
          description: Carrito creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "500":
          description: Error interno del servidor
  /api/carts/{cartId}:
    get:
      summary: Obtener carrito por ID
      parameters:
        - in: path
          name: cartId
          required: true
          schema:
            type: string
          description: ID del carrito
      responses:
        "200":
          description: Carrito encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: Carrito no encontrado
        "500":
          description: Error interno del servidor
    delete:
      summary: Eliminar carrito por ID
      parameters:
        - in: path
          name: cartId
          required: true
          schema:
            type: string
          description: ID del carrito
      responses:
        "200":
          description: Carrito eliminado correctamente
        "500":
          description: Error interno del servidor
  /api/carts/{cartId}/product/{productId}:
    post:
      summary: Añadir producto al carrito
      parameters:
        - in: path
          name: cartId
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: path
          name: productId
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        "200":
          description: Producto añadido al carrito correctamente
        "500":
          description: Error interno del servidor
  /api/carts/{cid}/product/{pid}:
    delete:
      summary: Eliminar producto del carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        "200":
          description: Producto eliminado del carrito correctamente
        "500":
          description: Error interno del servidor
    put:
      summary: Actualizar cantidad de producto en el carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
                  example: 5
      responses:
        "200":
          description: Cantidad del producto en el carrito actualizada correctamente
        "500":
          description: Error interno del servidor
  /api/carts/{cid}:
    put:
      summary: Actualizar el carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      product:
                        type: string
                        example: "60d21b4667d0d8992e610c86"
                      productQuantity:
                        type: number
                        example: 2
                      productPrice:
                        type: number
                        example: 20
                      productTotal:
                        type: number
                        example: 40
      responses:
        "200":
          description: Carrito actualizado correctamente
        "500":
          description: Error interno del servidor
  /api/carts/{cartId}/buy:
    post:
      summary: Comprar el carrito
      parameters:
        - in: path
          name: cartId
          required: true
          schema:
            type: string
          description: ID del carrito
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "60d21b4667d0d8992e610c87"
                quantity:
                  type: number
                  example: 1
      responses:
        "200":
          description: Carrito comprado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        "500":
          description: Error interno del servidor
  /api/carts/{cid}/purchase:
    get:
      summary: Obtener detalles de compra del carrito
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
      responses:
        "200":
          description: Detalles de compra obtenidos correctamente
        "500":
          description: Error interno del servidor
